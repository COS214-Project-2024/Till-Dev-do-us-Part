==7108== Memcheck, a memory error detector
==7108== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7108== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==7108== Command: ./main
==7108== Parent PID: 6896
==7108== 
==7108== Invalid read of size 8
==7108==    at 0x13A481: unleashDisease() (Main.cpp:261)
==7108==    by 0x13BF99: winter() (Main.cpp:487)
==7108==    by 0x13BBAC: simulation() (Main.cpp:430)
==7108==    by 0x13993E: DemoMain() (Main.cpp:174)
==7108==    by 0x138CC1: main (Main.cpp:72)
==7108==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7108== 
==7108== 
==7108== Process terminating with default action of signal 11 (SIGSEGV)
==7108==  Access not within mapped region at address 0x0
==7108==    at 0x13A481: unleashDisease() (Main.cpp:261)
==7108==    by 0x13BF99: winter() (Main.cpp:487)
==7108==    by 0x13BBAC: simulation() (Main.cpp:430)
==7108==    by 0x13993E: DemoMain() (Main.cpp:174)
==7108==    by 0x138CC1: main (Main.cpp:72)
==7108==  If you believe this happened as a result of a stack
==7108==  overflow in your program's main thread (unlikely but
==7108==  possible), you can try to increase the size of the
==7108==  main thread stack using the --main-stacksize= flag.
==7108==  The main thread stack size used in this run was 8388608.
==7108== 
==7108== HEAP SUMMARY:
==7108==     in use at exit: 127,348 bytes in 1,057 blocks
==7108==   total heap usage: 1,844 allocs, 787 frees, 158,849 bytes allocated
==7108== 
==7108== 315 (192 direct, 123 indirect) bytes in 2 blocks are definitely lost in loss record 127 of 152
==7108==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==7108==    by 0x143C8E: Memento::getActivePolicies() (Memento.cpp:17)
==7108==    by 0x12D08E: Government::setMemento(Memento*) (Government.cpp:89)
==7108==    by 0x139788: DemoMain() (Main.cpp:152)
==7108==    by 0x138CC1: main (Main.cpp:72)
==7108== 
==7108== LEAK SUMMARY:
==7108==    definitely lost: 192 bytes in 2 blocks
==7108==    indirectly lost: 123 bytes in 3 blocks
==7108==      possibly lost: 0 bytes in 0 blocks
==7108==    still reachable: 127,033 bytes in 1,052 blocks
==7108==         suppressed: 0 bytes in 0 blocks
==7108== Reachable blocks (those to which a pointer was found) are not shown.
==7108== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7108== 
==7108== For lists of detected and suppressed errors, rerun with: -s
==7108== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
